#!/usr/bin/env node
var Gr = require('../index.js'),
    Config = require('../lib/config.js'),
    gr = new Gr(),
    path = require('path'),
    style = require('../lib/style.js'),
    opts = require('optimist')
    .usage('Usage: $0 --include <file/dir ...> --out filename.js')
    .options({
      'list': {
        describe: 'List all known repositories.'
      },
      'tag': {
        describe: 'Add tag'
      },
      'version': {
        describe: 'Version info'
      }
    });
    argv = opts.parse(process.argv);

if(argv['version'] || argv['v'] ) {
  console.log(require('../package.json').version);
  process.exit();
}

if(argv['help']) {
  console.log(opts.help());
  process.exit();
}

if(argv['tag']) {
  var rest = process.argv.slice(process.argv.indexOf('--tag') + 1);
  console.log(rest);
  process.exit();
}

var homePath = process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'],
    task = 'git -c color.status=always status -sb',
    config = new Config(homePath+'/.grconfig.json'),
    repos = {};

gr.add(homePath);

if(argv['list']) {
  gr.files().forEach(function(file) {
    var cwd = path.dirname(file.name).replace(new RegExp('^'+homePath+'/'), '~/');
    console.log(style(path.dirname(cwd) + path.sep, 'gray') + style(path.basename(cwd), 'white'));
  });
  process.exit();
}

gr.files().forEach(function(file) {
  repos[file.name] = {};
});

config.items.repos = repos;

config.save();

if(process.argv.length > 2) {
  var parts = process.argv.slice(2);
  /*
  if(parts[0] == 'git') {
    parts.splice(1, 0, '-c color.ui=always');
  }
  */
  task = parts.join(' ');
}

gr.run(task);
#!/usr/bin/env node
var Gr = require('../index.js'),
    gr = new Gr(),
    fs = require('fs'),
    path = require('path'),
    style = require('../lib/style.js'),
    log = require('minilog')('gr');

require('minilog').enable();

var config = require('../plugins/config.js'),
    tag = require('../plugins/tag.js'),
    status = require('../plugins/status.js');

function version(req) {
  console.log(require('../package.json').version);
  req.exit();
}

// middleware: git
/*
gr.use(function(req, res, next) {
  console.log('Ran middleware');
  next();
});
*/

// plugins

gr.use('help', function(req) {
  console.log(fs.readFileSync(__dirname + '/usage.txt').toString());
  req.exit();
});

gr.use('-v', version);
gr.use('--version', version);
gr.use('version', version);

// bootstrap plugin ...

// config plugin
gr.use(['config', 'add'], config.add);
gr.use(['config', 'set'], config.set);
gr.use(['config', 'remove'], config.remove);
gr.use(['config', 'rm'], config.remove);
gr.use(['config', 'get'], config.get);
gr.use(['config', 'list'], config.list);
gr.use(['config', 'ls'], config.list);
gr.use(['config'], config.list);

// list plugin
gr.use('list', require('../plugins/list.js'));

// nop plugin
gr.use(['nop'],  require('../plugins/nop.js'));

// status plugin
gr.use(['status'], status);

// tag manipulation
gr.use(['tag', 'add'], tag.add);
gr.use(['tag', 'remove'], tag.remove);
gr.use(['tag', 'rm'], tag.remove);
gr.use(['tag', 'list'], tag.list);
gr.use(['tag', 'ls'], tag.list);
gr.use(['tag'], tag.list);

// default: run the remainder as a shell task
gr.use(require('../plugins/run.js'));

// preprocessing: expand +#tag / -#tag
var argv = gr.preprocess(process.argv.slice(2));
// parse targets
argv = gr.parseTargets(argv);
// execute for each target
gr.exec(argv, function() {
  // console.log('last!');
});


// TODO:
// test gr #foo #bar
// gr #foo -- cmd
// gr dir file.sh
// gr -t work -t play
// gr +#foo path1 path2 path3
// gr -#foo path1 path2 path3
